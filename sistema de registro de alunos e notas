-- Passo 1: Criação do Banco de Dados
DROP DATABASE IF EXISTS Escola;
CREATE DATABASE Escola;
USE Escola;

-- Passo 2: Criação das Tabelas

-- Tabela Alunos
CREATE TABLE Alunos (
    id_aluno INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    data_nascimento DATE,
    endereco VARCHAR(255)
);

-- Tabela Cursos
CREATE TABLE Cursos (
    id_curso INT AUTO_INCREMENT PRIMARY KEY,
    nome_curso VARCHAR(100) NOT NULL,
    descricao TEXT
);

-- Tabela Notas
CREATE TABLE Notas (
    id_nota INT AUTO_INCREMENT PRIMARY KEY,
    id_aluno INT,
    id_curso INT,
    nota DECIMAL(5, 2),
    FOREIGN KEY (id_aluno) REFERENCES Alunos(id_aluno) ON DELETE CASCADE,
    FOREIGN KEY (id_curso) REFERENCES Cursos(id_curso) ON DELETE CASCADE
);

-- Passo 3: Inserção de Dados

-- Inserindo alunos
INSERT INTO Alunos (nome, data_nascimento, endereco) VALUES
('João da Silva', '2000-01-15', 'Rua A, 123'),
('Maria Oliveira', '1999-07-23', 'Rua B, 456'),
('Carlos Santos', '2001-11-30', 'Rua C, 789');

-- Inserindo cursos
INSERT INTO Cursos (nome_curso, descricao) VALUES
('Matemática', 'Curso de Matemática Avançada'),
('História', 'Curso de História Mundial'),
('Programação', 'Curso de Programação em Python');

-- Inserindo notas
INSERT INTO Notas (id_aluno, id_curso, nota) VALUES
(1, 1, 8.5),
(1, 2, 7.0),
(2, 1, 9.0),
(2, 3, 6.5),
(3, 3, 7.5);

-- Passo 4: Consultas

-- Listar todos os alunos com suas respectivas notas e cursos
SELECT Alunos.nome, Cursos.nome_curso, Notas.nota
FROM Notas
JOIN Alunos ON Notas.id_aluno = Alunos.id_aluno
JOIN Cursos ON Notas.id_curso = Cursos.id_curso;

-- Calcular a média das notas para cada curso
SELECT Cursos.nome_curso, AVG(Notas.nota) AS media_nota
FROM Notas
JOIN Cursos ON Notas.id_curso = Cursos.id_curso
GROUP BY Cursos.nome_curso;

-- Encontrar o aluno com a maior nota em cada curso
SELECT Cursos.nome_curso, Alunos.nome, MAX(Notas.nota) AS maior_nota
FROM Notas
JOIN Alunos ON Notas.id_aluno = Alunos.id_aluno
JOIN Cursos ON Notas.id_curso = Cursos.id_curso
GROUP BY Cursos.nome_curso, Alunos.nome
ORDER BY Cursos.nome_curso, maior_nota DESC;

-- Passo 5: Atualização de Dados

-- Atualizar a nota de um aluno em um curso específico
UPDATE Notas
SET nota = 9.5
WHERE id_aluno = 1 AND id_curso = 2;

-- Modificar o endereço de um aluno
UPDATE Alunos
SET endereco = 'Rua Nova, 101'
WHERE id_aluno = 2;

-- Passo 6: Exclusão de Dados

-- Excluir um aluno e todas as suas notas associadas
DELETE FROM Alunos WHERE id_aluno = 3;

-- Remover um curso e todas as notas associadas
DELETE FROM Cursos WHERE id_curso = 1;
